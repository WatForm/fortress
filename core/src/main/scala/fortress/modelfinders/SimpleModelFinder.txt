package fortress.modelfinders

import fortress.problemstate._
import fortress.solvers._
import fortress.compilers._

/**
  * A Model finder that allows the user to directly specify the compiler to use
  *
  * @param solver the solver interface to be used
  * @param compiler the compiler the problem will be passed through before being given to the solver
  */
class SimpleModelFinder(solver: Solver, compiler: Compiler) extends ModelFinder() {
    def this(compiler: Compiler) = this(Z3NonIncCliSolver, compiler)

    def this(solver: Solver, transformers: Seq[ProblemStateTransformer]) = this(solver, new ConfigurableCompiler(transformers))

    def this(transformers: Seq[ProblemStateTransformer]) = this(new ConfigurableCompiler(transformers))

    def this(solver: Solver, transformers: Array[ProblemStateTransformer]) = this(solver, new ConfigurableCompiler(transformers))


    def this(transformers: Array[ProblemStateTransformer]) = this(new ConfigurableCompiler(transformers))

    override protected def createCompiler(): Compiler = compiler
}