(set-info :smt-lib-version "2.6")
(set-info :status sat)
(set-info :category "toyExample")
(set-info :source |
This is just a test really.
|)

(set-info :exact-scope "(A 1)")
(set-info :nonexact-scope "(B 2)")
(set-info :unchanging-scope "(A) hey, this is an error (B)   ")

(set-logic UF)
(declare-sort A 0) (declare-sort B 0)
(declare-const x A)
(declare-const y B)
(declare-fun p (A B) Bool)
(assert (p x y))
(assert (forall ((x A) (y B)) true))
(assert (exists ((x A)) true))
(declare-const q Bool)
(assert (or q (not q)))
(assert (and q q))
(assert (not false))
(assert (distinct q false))
(assert (= q q))
(assert (=> false true))

(declare-fun f (A) A)
(declare-fun g (A) A)
(declare-const a A)
(declare-const b A)
(declare-const c A)
(assert (forall ((x A))
                (! (= (f (g x)) x)
                   :pattern ((f (g x))))))
(check-sat)
(exit)
